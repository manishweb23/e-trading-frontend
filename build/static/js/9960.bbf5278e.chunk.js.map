{"version":3,"file":"static/js/9960.bbf5278e.chunk.js","mappings":"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","sources":["../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/codegen/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/fetch/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/path/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/base64-js/index.js","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/protobufjs/index.js","../node_modules/protobufjs/src/common.js","../node_modules/protobufjs/src/converter.js","../node_modules/protobufjs/src/decoder.js","../node_modules/protobufjs/src/encoder.js","../node_modules/protobufjs/src/enum.js","../node_modules/protobufjs/src/field.js","../node_modules/protobufjs/src/index-light.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/src/index.js","../node_modules/protobufjs/src/mapfield.js","../node_modules/protobufjs/src/message.js","../node_modules/protobufjs/src/method.js","../node_modules/protobufjs/src/namespace.js","../node_modules/protobufjs/src/object.js","../node_modules/protobufjs/src/oneof.js","../node_modules/protobufjs/src/parse.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/root.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/service.js","../node_modules/protobufjs/src/tokenize.js","../node_modules/protobufjs/src/type.js","../node_modules/protobufjs/src/types.js","../node_modules/protobufjs/src/util.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/verifier.js","../node_modules/protobufjs/src/wrappers.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        if (sync)\n            throw err;\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n"],"names":["module","exports","fn","ctx","params","Array","arguments","length","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","p","n","charAt","Math","ceil","b64","s64","i","encode","buffer","start","end","t","parts","chunk","j","b","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","undefined","Error","test","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","scopeValues","scopeOffset","Function","formatParams","formatOffset","replace","$0","$1","value","Number","floor","JSON","stringify","functionNameOverride","EventEmitter","this","_listeners","prototype","on","evt","off","listeners","splice","emit","args","fetch","asPromise","require","fs","inquire","filename","options","callback","xhr","readFile","contents","XMLHttpRequest","binary","onreadystatechange","readyState","status","response","responseText","Uint8Array","overrideMimeType","responseType","open","send","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","moduleName","mod","eval","e","path","isAbsolute","normalize","split","absolute","prefix","shift","originPath","includePath","alreadyNormalized","alloc","size","SIZE","MAX","slab","call","utf8","len","read","write","c1","c2","byteLength","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","code","indexOf","num","output","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","arg","encodingOrOffset","TypeError","allocUnsafe","from","encoding","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","checked","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","writeUIntLE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","alphabet","table","i16","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","rt","common","timeType","commonRe","json","nested","google","protobuf","Any","fields","type_url","id","Duration","seconds","nanos","Timestamp","Empty","Struct","keyType","Value","oneofs","kind","oneof","nullValue","numberValue","stringValue","boolValue","structValue","listValue","NullValue","values","NULL_VALUE","ListValue","rule","DoubleValue","FloatValue","Int64Value","UInt64Value","Int32Value","UInt32Value","BoolValue","StringValue","BytesValue","FieldMask","paths","file","converter","Enum","util","genValuePartial_fromObject","gen","field","fieldIndex","prop","defaultAlreadyEmitted","resolvedType","typeDefault","repeated","fullName","isUnsigned","genValuePartial_toObject","mtype","fieldsArray","safeProp","map","toObject","sort","compareFieldsById","repeatedFields","mapFields","normalFields","partOf","valuesById","long","low","high","unsigned","toNumber","arrayDefault","hasKs2","_fieldsArray","filter","group","ref","types","defaults","basic","packed","rfield","required","missing","wireType","mapKey","genTypePartial","optional","ReflectionObject","create","className","Namespace","comment","comments","valuesOptions","reserved","fromJSON","enm","toJSONOptions","keepComments","Boolean","add","isString","isReservedId","isReservedName","allow_alias","remove","Field","Type","ruleRe","extend","isObject","defaultValue","Long","extensionField","declaringField","_packed","getOption","setOption","ifNotSet","resolved","parent","lookupTypeOrEnum","proto3_optional","fromNumber","freeze","newBuffer","emptyObject","emptyArray","ctor","fieldId","fieldType","fieldRule","decorateType","decorateEnum","fieldName","_configure","Type_","build","load","root","Root","loadSync","encoder","decoder","verifier","OneOf","MapField","Service","Method","Message","wrappers","configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","tokenize","parse","resolvedKeyType","fieldKeyType","fieldValueType","properties","$type","writer","encodeDelimited","reader","decodeDelimited","verify","object","requestType","requestStream","responseStream","parsedOptions","resolvedRequestType","resolvedResponseType","lookupType","arrayToJSON","_nestedArray","clearCache","namespace","addJSON","toArray","nestedArray","nestedJson","names","methods","getEnum","prev","setOptions","onAdd","onRemove","define","ptr","part","resolveAll","filterTypes","parentAlreadyChecked","lookupEnum","lookupService","Service_","Enum_","defineProperties","unshift","_handleAdd","_handleRemove","setParsedOption","propName","opt","find","hasOwnProperty","newValue","setProperty","newOpt","Root_","fieldNames","addFieldsToParent","oneofName","oneOfGetter","oneOfSetter","keepCase","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","numberRe","nameRe","typeRefRe","fqTypeRefRe","pkg","imports","weakImports","syntax","token","preferTrailingComment","tn","alternateCommentMode","next","peek","skip","cmnt","head","isProto3","applyCase","camelCase","illegal","insideTryCatch","line","readString","readValue","acceptTypeRef","substring","parseFloat","parseNumber","readRanges","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","parseType","parseEnum","service","ifBlock","commentText","method","parseMethod","parseService","reference","parseField","parseExtension","fnIf","fnElse","trailingLine","valueType","parseInlineOptions","parseMapField","parseOneOf","extensions","endsWith","startsWith","lcFirst","ucFirst","parseGroup","dummy","parseEnumValue","isCustom","option","parseOptionValue","objectResult","lastValue","prevValue","simpleValue","LongBits","indexOutOfRange","writeLength","create_array","readLongVarint","bits","readFixed32_end","readFixed64","_slice","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","nativeBuffer","skipType","BufferReader_","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","deferred","files","SYNC","resolvePath","self","sync","finish","cb","getBundledFileName","idx","altname","process","queued","weak","setTimeout","readFileSync","isNode","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","endedByRPC","_methodsArray","inherited","methodsArray","rpcService","methodName","isReserved","q","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","lastCommentLine","stringDelim","subject","setComment","isLeading","lineEmpty","leading","commentOffset","lines","text","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","cursor","re","lastIndex","match","exec","repeat","curr","isDoc","isLeadingComment","expected","_fieldsById","_oneofsArray","_ctor","fieldsById","oneofsArray","generateConstructor","ctorProperties","setup","wrapper","originalThis","fork","ldelim","typeName","bake","o","key","safePropBackslashRe","safePropQuoteRe","toUpperCase","camelCaseRe","decorateRoot","decorateEnumIndex","setProp","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","newError","CustomError","captureStackTrace","pool","global","versions","node","window","isset","isSet","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","ProtocolError","fieldMap","longs","enums","seenFirstField","invalid","genVerifyKey","genVerifyValue","oneofProp","Op","noop","State","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer"],"sourceRoot":""}